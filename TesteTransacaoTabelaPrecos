# Dependência: criar banco (banco.txt) e tabelas (tabelas.txt)
# De preferência rodar com registros criados (insert_teste.txt)
#

###### SELECIONA O DATABASE CORRETO ANTES DE CRIAR A PROCEDURE
USE Representante;

###### DELIMITADOR PARA O BANCO DE DADOS INCLUIR A PROCEDURE CORRETAMENTE
DELIMITER |
CREATE OR REPLACE PROCEDURE TesteTransacaoTabelaPrecos(quant INT) MODIFIES SQL DATA
BEGIN
	###### VARIÁVEIS CÓDIGO TEMPORÁRIO E CONTADOR DO LOOPINT
	DECLARE CodigoTabela INT DEFAULT 0;
	DECLARE loopcont INT DEFAULT 0;

	###### COMEÇA A TRANSAÇÃO (E O CÓDIGO REAL) AQUI
	START TRANSACTION;

	###### ENCONTRA O PRIMEIRO PRÓXIMO CÓDIGO USADO PARA INCLUIR REGISTROS
	SELECT MAX( CD_Codigo) INTO CodigoTabela FROM TabelaPrecos;
	SET CodigoTabela := CodigoTabela + 1;

	###### LOOPING QUE SERÁ REPETIDO quant VEZES
	REPEAT
		###### INSERE UMA TABELA DE PREÇOS COM O NOVO CÓDIGO
		INSERT INTO TabelaPrecos ( CD_Codigo, DS_Nome, DS_Descricao) VALUES
		( CodigoTabela,
		  CONCAT( "Tabela de Preços Nº ", CodigoTabela ),
		  CONCAT( "Descrição da Tabela de Preços Nº ", CodigoTabela, " gerada por transação") );

		###### INCREMENTA O CONTADOR DO LOOPING E DO CÓDIGO
		SET loopcont := loopcont + 1;
		SET CodigoTabela := CodigoTabela + 1;
	UNTIL loopcont = quant END REPEAT;

	###### O CÓDIGO REAL TERMINA AQUI, ENTÃO COMMITAMOS A TRANSAÇÃO
	COMMIT;

	###### PARA LISTAR O QUE FOI INCLUÍDO, DECREMENTAMOS QUANT+1 E FAZEMOS SELECT
	SET CodigoTabela := CodigoTabela - ( quant + 1);
	SELECT * FROM TabelaPrecos WHERE CD_Codigo > CodigoTabela;
END |
